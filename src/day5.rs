/*
  Day 5: Binary Boarding

  Part1
  Airling boarding pass uses binary space partitioning where F/B means front/back, and L/R means left/right.
  There are 127 rows and 8 columns.
  For example, consider just the first seven characters of FBFBBFFRLR:
    Start by considering the whole range, rows 0 through 127.
    F means to take the lower half, keeping rows 0 through 63.
    B means to take the upper half, keeping rows 32 through 63.
    F means to take the lower half, keeping rows 32 through 47.
    B means to take the upper half, keeping rows 40 through 47.
    B keeps rows 44 through 47.
    F keeps rows 44 through 45.
    The final F keeps the lower of the two, row 44.
    So, decoding FBFBBFFRLR reveals that it is the seat at row 44, column 5.
  Each seat has a unique id that is the row mulitplied by 8, then add the column.
  What is the highest seat ID on a boarding pass?

  Part2
  Your seat is the only seat not in the list of boarding passes. Your seat isn't in the very front or back.
  What is your seat ID?
  
*/

pub fn id_from_pass(row: i32, col: i32) -> i32 {
  return row * 8 + col;
}

pub fn determine_position(boarding_pass: &str) -> (i32, i32) {
  let mut row_range = (0,127);
  let mut pass_chars = boarding_pass.chars();
  for _ in 0..7 {
    let current_char = pass_chars.next().unwrap();
    row_range = binary_search(row_range.1, row_range.0, current_char == 'B');
  }
  let mut col_range = (0,7);
  for _ in 0..3 {
    let current_char = pass_chars.next().unwrap();
    col_range = binary_search(col_range.1, col_range.0, current_char == 'R');
  }
  return (row_range.1, col_range.1);
}

pub fn highest_id(passes: &Vec<String>) -> i32 {
  let mut highest = 0;
  for pass in passes {
    let position = determine_position(pass);
    let id = id_from_pass(position.0, position.1);
    if id > highest {
      highest = id;
    }
  }
  return highest;
}

pub fn find_missing_seat(passes: &Vec<String>) -> i32 {
  let mut ids = Vec::new();
  for pass in passes {
    let position = determine_position(pass);
    ids.push(id_from_pass(position.0, position.1));
  }
  ids.sort_unstable();
  let mut previous_val = ids[0];
  for i in 1..ids.len() {
    if ids[i] != previous_val + 1 {
      return previous_val + 1;
    }
    previous_val = ids[i];
  }
  return 0;
}

fn binary_search(upper: i32, lower: i32, pick_upper: bool) -> (i32, i32) {
  let new_pos = (upper + lower) as f64 / 2.0;
  if pick_upper {
    return (new_pos.ceil() as i32, upper);
  }
  return (lower, new_pos as i32);
}


pub fn read_boarding_passes() -> Vec<String> {
  let passes = "FFBBFFFLRL
    FFBBFBBRRL
    FBBBFFBLRL
    BBFBFFBLRR
    BFBBBFFLLL
    BFBBBBBLLR
    FBFBFBFLLR
    BFBFBBFLLR
    FBBFBFBLLL
    BBBFBFBRLL
    BFBBBFBLRL
    FBBFFFBLLR
    BFFBFBFLRL
    FBBBBFBRLR
    FFBBBBBRRL
    FBBFBFFLRL
    FBBBBBBLLR
    FBBFBBBRRL
    FBBFFBFRLL
    FBFBBBBRRR
    BFFBFBFRRL
    BFBFBBBLLR
    FFFFBFBLRL
    FBFFBFFLRL
    FFBFBBBRRR
    FFBFFFFLRR
    FBBBFFFLLR
    FFFFFBFLLL
    BFFFFFFLRL
    FBBBBBFRLR
    BBBFFBBRRR
    FFFFBBBRLL
    FBFFBBBRLR
    BFBBBFFRRL
    BBFBBFBLRL
    BFBFBFFRRR
    BBFBFFFLLL
    FBFBFBFRRR
    BFBFBFFRRL
    BBFBBFBRRL
    FFBBFBFLRL
    FBFFFFFRLR
    FBBFFFBLLL
    FBBBBFFRLL
    FFBBBBBLLL
    BFFBBFFRLR
    FFFBBFBRRR
    FBBBFFFRLL
    FFFBFBFLRL
    BFFBBFFLRL
    BFBBBBBLRL
    BFFFFFBRRR
    FFFBBFBLRL
    FBBBFBFRLL
    FBBFBFBLRR
    BBFBBFFLRR
    FBFFBBFLLL
    FFFFFBBRLL
    FFBBFFBRLR
    BBFFFFFLLL
    BFFFFBFLRR
    FBFBBFFRRL
    BFBFFBBLLR
    FBBBFBBRLR
    BBBFBFFRLL
    BBFFBBFRLR
    FFBFFBBRLR
    FFBBBFBRLR
    BBBFFFBLRR
    BBFBFBFLRR
    BFBBBBBRLR
    BFFFFFBLLR
    FBFFBFFRLL
    BBBFFBBRLR
    FFBBBFBRRR
    BFBBBFBRLR
    FBFFFBBLRL
    FFFBFFFRLL
    BBFFBFFLLL
    BFFBBFFRRR
    FFBFBFBRRL
    FFBBBFBRRL
    FBBFFBBRLR
    FBFFBBFRLR
    BFBFFBBRRR
    BBFBFBBRLR
    FFBFFFFRRL
    BBFFBFFLLR
    FBBFBFBRRR
    BFBFBBBRRL
    FBFBFFBRRL
    FFFBBFFRLL
    BFBFFFFRRR
    FBBFFBFLLR
    FFBFBFFRLL
    FBFFBFBLLL
    FBFBFFFLRL
    BBFFFFFRRR
    FBFFBBFLRR
    FBFFFBFLRL
    FBBBFBBRRL
    BFFBFFFRLR
    FFBBBBFLLR
    BFFFFBFLRL
    BFFBFFBRRR
    FFBFBFBLRL
    BBFFFBBRLL
    FFBFBBFRRR
    FFFBFBFRRL
    FBFFBFBRRR
    FBBBBFBRRL
    FBFFFFFLLR
    FFBFFFFLLR
    FBBBBFFRLR
    BBBFFBBLRR
    BBBFFBFLRR
    FBBFBBBLRR
    FBBFBBFRRL
    FFFBFFBLLL
    FBFFFFBLLL
    BBFFFFBLLL
    FBFFFBFLRR
    FFBFBFFLRR
    BBFBFFFRLL
    FFFBBBFRLR
    FFBFFBBRLL
    BBBFBFFRRL
    BFFBBBBLRR
    BFFFFFFLLL
    BBBFFFBLLL
    FBBBBBFRLL
    FBBFBBBLLR
    BBFBFFFRRR
    BBFFFBBLLL
    FBBFFBFLRL
    BBFBFFFLRR
    BFBFFBFRLL
    BFFFBFBLLR
    BBBFBFBLLL
    BBBFFBFRLR
    FBFFBFBRLR
    BFBBFFFLLL
    BBFFFFBLRR
    BBFFFBBRRL
    BBBFBFFLLL
    BFBFFBFLLL
    FBBBBFFLLR
    FFBFFFFRLR
    FFBBBFBRLL
    BFFFFFFRRL
    BFBFFBBLRL
    BBFBBBFRLL
    BFFFBFFLLR
    BBFBFFBRLL
    BFBBFFFRLL
    BBFBBFBRLR
    FFFBBFBRLR
    BFFFBBFLRL
    FFBFFBFRLL
    FFFBFFBLRL
    BFBBBFFRLR
    BBBFFBBLRL
    BFFBBBBRRL
    FFBBFFFRLL
    BFBFFBFLRL
    BFFBBBBRRR
    BBFBFBFRRL
    BBBFFBFRRL
    BFFFBFBLRL
    FFFBFBFRLR
    FBFFBBBLRR
    FFFFBBBLLL
    BBBFBBFLLR
    BFFBFBFRRR
    BFBFFFBRRR
    BBFBBBBLLR
    FFBBBBBLRL
    FFBFFBFLRR
    FFBBBFBLRR
    BBFBBFBRRR
    FFFFFFBRRR
    BFBFBFBRRL
    BBFFBBBLRR
    BBFBFFFRLR
    FBBFBFBLLR
    BFBBFFBRLL
    FFFFBFBLLR
    BFBFFBBRLR
    FBFFFBFRRR
    BFFBFFFRLL
    FBBBFFFRRR
    FFFBBBFLLL
    FBBBBBBRRL
    FBBFFBBLLR
    BBBFBFFLRR
    BFBBFBFLRR
    FFFBBBBRRR
    BFFFBBFRLR
    FBFFBBFLLR
    FBFFFFFRRL
    BBBFBBFLLL
    BBBFFFFRLR
    FFFFBBBRRR
    FBBBFBBLLL
    BFFBFFBLLL
    FBFBBFBRLR
    FFBFFBBLLR
    FFFFBFFLRR
    FBBFFBFLLL
    FBFBBFBRRR
    BBBFBFBLLR
    BBFFBFBLLL
    FFBFFBFRLR
    FBBBFBBLRR
    BBFBBFBLLL
    FFBFFBFRRR
    FBBBBFFLRL
    BFBBFBFLLR
    FBFBBBFRLR
    BFBBFFBLLR
    FFFBBBFLLR
    FFFBBBFRRL
    BFFFBFBRLR
    BBBFBBFLRR
    BBFBBFFLLR
    BBFBBBBRLR
    FBBFFFFLRR
    FBFBBFFRLL
    FFBFFFFRRR
    FFFBBFFRRL
    FFFBBFBRRL
    FFFBFBFLLR
    FFBBBBFRRR
    BFFFFBBRRL
    BFFFFBFRRR
    BFBBBFBLRR
    FFBBFFFRRL
    FBBBBBBRRR
    BBFBFFBLLR
    FBFFFFBRLL
    BFBBFBFLLL
    FBFFFBBRLL
    FBBBFFBLLR
    BBFBBBFRLR
    FBFBBFBLRR
    FFFFFBFLLR
    FBFBBBFLRL
    FFBFFFBRRR
    FFFBBFFLRL
    BBBFFFFLLR
    BFBFFFFRRL
    FBFBFBBLLR
    FBBBFBFRRL
    BBFBBBBRRL
    BFBBFBFLRL
    BFFBBFFLLR
    BFBFFBBRLL
    FBFFBFFRLR
    FBFBFBFLRR
    BFBFBBFRRR
    FBBBBFBLRL
    FFBBBFFRRR
    FFBBFFBRLL
    FFBBBBBRLL
    FBFFFBFRRL
    FFFBBBFLRL
    BBBFBFFRRR
    FFFBFFFRRR
    FBFFBFFLLL
    FFBBFFBRRL
    BFFBFFBRRL
    FFBBBFFRLR
    BBBFFFFRRR
    BBFBFBBRRR
    FBFBBBBLRR
    BFBFBFBLLL
    FFBBFFBLLR
    BFFFBBBRLR
    BFBBFBBRLR
    BFFFFBBLLR
    FBFBFBBRLR
    BFFBBBFLLR
    FBFFBFBLRL
    BFBFBBBRLL
    BFBBBFFLRL
    FFFBFFFLRR
    BFFBBFBRLL
    FFBBBBFRLL
    BBFFFBBLLR
    FBFBFBFRLR
    BBBFFFBRLR
    BFFFFFBRLR
    BBBFFFFLLL
    FFFBBFBRLL
    BFFFFFBRRL
    FBFFBBBRRL
    FBFBFBBLLL
    FBFBBFBRRL
    FBBFBBBRRR
    BFBFFBBRRL
    FBBBBFBLLL
    FBBBBBBRLR
    BBFFFBFRRL
    FFFFBFBLLL
    FFFFBBFLRR
    FFFFBFFLRL
    BFFFBBFRLL
    BBFFFFBRRR
    BFBFFFFRLL
    BFFFFBFLLR
    BBBFFBBRRL
    BBFBBFBLLR
    BFFFFBFRLR
    FBBBFBFLLR
    FFFFFBBLRR
    BFBFFFFLRR
    FBFBBFFLRL
    FBFFFBBRRR
    BBFBBBFLRL
    BFBBBFFLLR
    BFBFBBFRRL
    FBFFFFBLRL
    FBBFBFFRLR
    BFBFBBBLRR
    BFBFBBFLRL
    BBFFBFFRLL
    FBFFBBBLRL
    BFBFBFFLLR
    FFFBFFBLLR
    FFFBFBBRRR
    BBFBFFFLLR
    FBBBFBFRLR
    FBFFBBBLLL
    FFBFBBFLRR
    FBFBFFFLLL
    BBFFFFFLRL
    FBFBBFBLRL
    BBFFFBFLLR
    BBFBBBBRRR
    BFBBBFFRRR
    FFFBFFBRLL
    FBBBFFFRLR
    BBBFBFBLRL
    FBFFFFBRLR
    BFFFFFBLLL
    FBFFFFBLLR
    BFBBFFBLRR
    BFBFBBBRRR
    BBBFBFBRRR
    FFFBBFFRRR
    FBBBFFFLRR
    BBFBFFFRRL
    BFBFBBFRLR
    BFFFBFBRLL
    FBFFFFFLLL
    FFFBBBBLRL
    FFFBBFFLLL
    FBFFFFBRRR
    FFBFBFBRLR
    BFBFFFBLRR
    BFFFBFBLLL
    FBBFBFFRLL
    FBFBFFFRLL
    FBBBFFBRRR
    FBBBFFBRLL
    FFBBFBBLLL
    FBBBBFBRRR
    BFBBBFBLLR
    FBBBBBFLLR
    FFBBFBFLRR
    BFFBBFBLLR
    FBFFFFBLRR
    BFFBFFFRRR
    BFFFBBBRLL
    FBFBBBFRLL
    BFBBBFBRRL
    FFBFFFBRRL
    FBBFFFFRLR
    BFBFBFFLLL
    FFBFBFBLLL
    FBFBBFBRLL
    FBFBFFBRLR
    BFFFFFBLRR
    FBBBFFBRLR
    BFBBFBBLLL
    BBFFBFBRRR
    FFFBFBBRRL
    FFBBBFFRLL
    BFFFFFFRLL
    BFBFFFBRLL
    FFFFFBFRLL
    BBBFFFBRRL
    FFBBBBFRRL
    BFFFBBBLRL
    FFFFFBBLLR
    BFFFFBBLRR
    BFBFFFBLLL
    FFFFFBBRLR
    BBFBFBFLLL
    FBFBBBBRLR
    FBBFBFBRRL
    FFBFBFBRRR
    FBBBBBFLRL
    BBFBFFBLLL
    BBFFFFBRLL
    BBBFBFBRLR
    BBFBFBBLLL
    BFBBBBBLRR
    BBFFFBFRRR
    FFFBFBFRLL
    BFFBBFBLLL
    FBFFBBBRRR
    FFFBFBFLLL
    BBFFBBFLRL
    BBFFFFBRLR
    BFBFBBBRLR
    BBBFBFFLLR
    FFBBBBFRLR
    BBFFBFFRRL
    BBFBFFBRRR
    BFBFFBFLLR
    FBFFBBFRLL
    BBFFFFBLLR
    FBFBFFFRLR
    FFBFBFBLLR
    BFBBFFBRRL
    FBBFFBBRRL
    BBFFBFBRLR
    FFFFBFBLRR
    FFFFBBBLRR
    FFBFBFFLLL
    FFBBBFFRRL
    BBFFFBFRLL
    FBFBBBFLRR
    FBBFBFFRRR
    FBBFBFFLLR
    BFFBBBFLRR
    FBBFBBFRLR
    BFFBBBFLLL
    BBFBBFBRLL
    BBBFFBBLLR
    BBBFBFBRRL
    FBFBBBFRRL
    FBBFFFBRLR
    BFBBFBBLRL
    FFBBFFFRRR
    BFBFFFFRLR
    BBFFFFFLLR
    BBFBFFBRLR
    BBFBFBFLRL
    FBFFFFFLRL
    FFBBBFFLRL
    FBFBFBBLRR
    FFBFBBBRLL
    FFBFBFFRLR
    FBBBFBFLRR
    FBFFBFFLRR
    BBFFBFBRRL
    FBBFFFFLRL
    FFFFBBFLRL
    FFBBFFBLRR
    BFBFFFBLLR
    BFBFBBFLRR
    BFBFBFBLLR
    BFBBFBFRLL
    BFBBFFBRLR
    FBFFFBBLLL
    FFFBBBBRRL
    FBBFBFFLLL
    FBFFBFBRLL
    BFFBFFFRRL
    FBFBFFBLLR
    BBFFBBFLLL
    FFBBBFBLLR
    BFBBFFFLLR
    FBBBFBFRRR
    FBBBFFBRRL
    FFFFBBFRRR
    FFBFFFFLRL
    FBBFBBFLRR
    FFBBBFBLLL
    FBFFFBFRLR
    FFBFFBBRRL
    FFFFBBFRRL
    BBBFFFFLRL
    FBBFFFBLRL
    FFBFBFBLRR
    FFFFBFFRRR
    FFFBFBFRRR
    BBFBBBBLLL
    FFBBFFBRRR
    FBBFFBBLRR
    FBBFBBFLLL
    BBFBBBFRRL
    FFFBBBBLLR
    FFBFFBBLRR
    BBFBBFFRLL
    BFBBBBFRLL
    BBFBFFBRRL
    BFFFBBFRRL
    FBBBBBBLLL
    FFBBFFBLLL
    FFBBFBBLRR
    BFBFBFBLRR
    FBBBFBBLLR
    BBFBFBFRLL
    FBBFBFFLRR
    FBBBFBFLLL
    FFBBFFFLRR
    BFFBBBFRLL
    FBBBBFBLLR
    BFBFFFFLRL
    FFBFBBBLLL
    FFBFFFBLRR
    BFBFBFBRLL
    FBFBFBFRLL
    BFBBBBBLLL
    FFBFBFBRLL
    BFBFFFFLLR
    BFFBBBBLLL
    FFBBFBBRLL
    FFFFBFBRLR
    FBFBBFFLLR
    BFBFBBFRLL
    FFBFFFFLLL
    FBBFFBFLRR
    FFBFFFBRLL
    FFFFBBBLLR
    BFBBBBBRLL
    FBBFBBBLRL
    FBFFBBBRLL
    FBFFFBBLLR
    FFBBBFBLRL
    FFFFBFFRLL
    BBFFFBBLRL
    BFFFBFFRRL
    BFFBFBFLLL
    BBFFFBFLLL
    FFFFFBFLRL
    FBBFFFFRRR
    FBBBBBFLRR
    FFBFFFBRLR
    FBBBFFFLLL
    FFBFBBBLRL
    FFBFFFBLLL
    FBFFBBBLLR
    BBBFBFFRLR
    FFFBFFFRLR
    BBFBBBFLLR
    FFBBFFFRLR
    FFFFFBFRLR
    FBBFFFBRRL
    BFFBBBBRLR
    BFFBFFBRLL
    BFBBBFBRLL
    FBFFBBFRRR
    FBFBBFFLLL
    BBFBFBBLRL
    BBBFBBFLRL
    FBFBFFBLRR
    FBFFFFFRLL
    BFBBFBFRRR
    BFBFBBBLLL
    FFBBBFFLRR
    BFBBFBBLLR
    FBBBBFFRRR
    BFFFBFFLRL
    FFFFBFBRLL
    BFFFFBBLLL
    BFFBFBBLLL
    BFFBFBBRRL
    BBBFFFBLRL
    BBBFFFBRRR
    BFFFBBFLRR
    FFBBFBFRLL
    BFFBBFBRLR
    FFBFFBFLLR
    FBFBBBBLRL
    BFFBBFFRRL
    BBFFFBBRRR
    FBBBFBBRRR
    BFFFFBFRRL
    FFBFBBBRRL
    BFFFBBBRRR
    BFBBBFBRRR
    BFBFBFFRLR
    FFFFFBBRRR
    FBFBFBFLRL
    FFBBBBBLRR
    BBFFFFBLRL
    FFFBFFFLLR
    FFFBFFFRRL
    FBBBFBBLRL
    BBFFBBFLLR
    BBFFBFFLRR
    BFFFFFFRLR
    FBBFBBFRLL
    BFBBBBFRRR
    FBFBBBBLLR
    FFFBBFFRLR
    FBBFBBBRLR
    FBBFBFBRLR
    FBBBFFFLRL
    FFBBFBBRLR
    BFFFBBBLLL
    BBFBBFFRRR
    FBFBFFFLRR
    BBFFBBFRRR
    FBBFBFFRRL
    BFFFFBFLLL
    BBBFFBBLLL
    BFBBBBFRRL
    FBBFFFBRRR
    BFBBBBFLLL
    FFFBFFBRRL
    BFFBFFBLLR
    FFBBFBFRRL
    FBFFFBBRLR
    BFFFBBBLRR
    FFBFBFFRRR
    FBFBFFBRLL
    BFBBBBFLRL
    BFBBFFFRRR
    FBFBFBFRRL
    BBFBBFFLRL
    FBBFFFFLLL
    BBBFFBBRLL
    FBFFFBBRRL
    FFBFBFFLRL
    FBFFBBFLRL
    BFFBFBFLRR
    BFFFFBBLRL
    BBFBBBBLRL
    FFBFBBFRLL
    FBFFFBFLLL
    BFFBFFBLRL
    FBBFFFBLRR
    FFFFBFFRRL
    FBBFFBFRLR
    BFFFBFFRRR
    FFFFBFBRRL
    BBFFBFBLRL
    FBBFBFBRLL
    BFBBFFFLRL
    FFFBBBFRRR
    BFFFFFFLLR
    FBFBBFFRRR
    BFFFFFBRLL
    FFFFBBBRRL
    BFFBFBFLLR
    FFFFBFFRLR
    BFFBBBFRRL
    BFBBFBBRLL
    FFFFFBFRRL
    FFBBBBFLRL
    FFBBFBFLLR
    BBFFBBBRLL
    BFFBFFFLLR
    BBFBBBBRLL
    BFFBFBBRLR
    FFBFBFFRRL
    FBBFBBFLRL
    FFBFFBBLRL
    BFBFFFBRLR
    BFFBFFFLRR
    BFFBBBBLRL
    FFFBFBBRLR
    FBBBBBFRRR
    BFBFBFFLRL
    BFBFFFBLRL
    FBBBFBBRLL
    FBFBFBFLLL
    FBBFFBFRRR
    FFFBFBBLRR
    FFFBFFFLRL
    BFBFBFBRRR
    BFFBBFFLLL
    BFFBFBBRRR
    FFBFFBFRRL
    FBFFFBFRLL
    FFBFBBFLLL
    FFBBFFBLRL
    FBFBBBBRRL
    BFFBBFBRRL
    FBFBFBBLRL
    BBFBFBFRLR
    FBFFFFFLRR
    BBBFFBFRLL
    BFBFBFFRLL
    FBBFFBBLRL
    FBFBFBBRRL
    FFBBBBBRLR
    FBBFBBFLLR
    FFFBFBBRLL
    BBFFFFBRRL
    BFBFBFBLRL
    FBFBBFBLLR
    BBBFBFBLRR
    FFFFBBFRLL
    FFBBBBBRRR
    BFBBFFBRRR
    BFFFBBBLLR
    FBBBBBBRLL
    FFBFBBFRLR
    BBFFBBFRLL
    BFFBFFFLRL
    FFBBFFFLLL
    BFFBFBBLRL
    BBBFFFFRLL
    BBFBBBFRRR
    FBFFBFFRRR
    FBBFFFFRLL
    BFFFBBBRRL
    FBFBBBFLLL
    FFFFBBFLLR
    FBBFBBFRRR
    BBFFBBBRLR
    BBFBBFBLRR
    BFFFBFFLLL
    BBFBFBFRRR
    FFBFFFBLRL
    BBFFFBBRLR
    FBFBFBBRRR
    BFBBFFBLRL
    BFFFFBFRLL
    BBFBFBBRLL
    BFFFFBBRLL
    FFFFBFFLLR
    FFBBBBFLRR
    FBFBFFFRRR
    FFFBBFBLLR
    FFBBFBFRRR
    BFBBFBBRRR
    FFBFBBBLLR
    FFBFFBFLLL
    FFFFBBBLRL
    FFBFBFFLLR
    BFBBBFFLRR
    FBBFFFFLLR
    FBFFFFBRRL
    BFFBBFFLRR
    FFBBFBBRRR
    FFFFBFBRRR
    BFBBBBFLLR
    FBBFFBBRRR
    BBFBFBBLRR
    FFFBBBBLRR
    FBFFFBBLRR
    BFFBFBFRLR
    BFBFFBFRLR
    BFBBFFFRLR
    FFBBFFFLLR
    FFFFFBFLRR
    BFFBBFBLRR
    FFFFBBFRLR
    BFFFBBFLLR
    FBFBFFBRRR
    BBFBFBBRRL
    FBFBBFFLRR
    BFBFFBFLRR
    BBFFFBBLRR
    FBFFBBFRRL
    FBBBBBBLRL
    FBBFFBBLLL
    BFBFBBBLRL
    BBBFFFBLLR
    BFFFBFFLRR
    BBFFBBFRRL
    BFBFBBFLLL
    FFBBBFFLLR
    BFBBFBFRRL
    FBFFBFFRRL
    BFFFBFBLRR
    BFBBFBBRRL
    BBFBFFBLRL
    BFFBBBFRRR
    FBFBBFBLLL
    BBFFBFFRRR
    BBFFBFBRLL
    BBBFFBFLLR
    FFFBBFBLLL
    FBBBFFFRRL
    BFFBFFBLRR
    BBFBFBBLLR
    FFBBFBFRLR
    BBFFFFFRLR
    FBFFBFBLRR
    BFFFFFFRRR
    FFBBFBFLLL
    BFBBFBBLRR
    BBFFFBFRLR
    BBBFFBFRRR
    FFFFBBFLLL
    BBFFBFBLRR
    BFFBFBBRLL
    FBFFFBFLLR
    BFFFBBFRRR
    FFBFBBFRRL
    BFBFFBBLRR
    FBBFFBFRRL
    FFBBBBBLLR
    BFBFFBBLLL
    BFBBBBFLRR
    FFFFBBBRLR
    BFFBBBBLLR
    BFFFFFFLRR
    BFFFFBBRLR
    FFFBBBBRLL
    BFBBFFFLRR
    BFFBBBFRLR
    BFFBBFFRLL
    FBFBBBBLLL
    BFBFBFBRLR
    BBFBBFFLLL
    BBFBBBBLRR
    FFBBFBBLLR
    FBBFFFBRLL
    FBBBBFFRRL
    FFFBBFBLRR
    FFFBFBBLLR
    FFFFFBBRRL
    FBFBBBFRRR
    BBFFFBFLRL
    FBFBFFBLLL
    FBFBFFFRRL
    BFBFFFBRRL
    BBFFBFFRLR
    BBFFBFBLLR
    FFFBFBFLRR
    BBFBBBFLLL
    BFBBBFFRLL
    BFFFBFBRRL
    FFFFBFFLLL
    FBBBBBFRRL
    FBFBFFBLRL
    FBBBBBBLRR
    FFFBBBBRLR
    BFFBFBBLLR
    BBFFBBFLRR
    BFFFFFBLRL
    FFBBBBFLLL
    BFFBFBBLRR
    FFFBBBFLRR
    FFBFBBFLRL
    FBBFBFBLRL
    BBBFFFFRRL
    BBFBFBFLLR
    BFBBBFBLLL
    FFBFBBBLRR
    BFFBFFBRLR
    FFFBBBBLLL
    BFFFBFFRLR
    BFFFBBFLLL
    FBBBBFBLRR
    FBBFBBBRLL
    BFBFFBFRRL
    BFFFFBBRRR
    BBFFBBBLRL
    FBBBBFBRLL
    BFBBFFFRRL
    BBBFFBFLLL
    BFBFFBFRRR
    FFBFFBBRRR
    FFBFBBBRLR
    FBBBBFFLRR
    BFBFBFFLRR
    BFBBBBFRLR
    FFFFFBFRRR
    BFFBBFBRRR
    BFBBBBBRRL
    BFFBBFBLRL
    FFFBFBBLRL
    FFFBFBBLLL
    FFBBFBBLRL
    BBBFFFFLRR
    FFFFFBBLRL
    FBFFBFBLLR
    FBFBBBBRLL
    BFFBFBFRLL
    BFFFBFFRLL
    BFFFBFBRRR
    BBBFBFFLRL
    BFFBFFFLLL
    BBFFFFFRRL
    FBFBFFFLLR
    FFBFFBBLLL
    BBFFBFFLRL
    BBFFBBBLLL
    FFFFFBBLLL
    BFBBFFBLLL
    FFFBFFBRLR
    FBBFFBBRLL
    FBFBFBBRLL
    BFFBBBFLRL
    FFFBFFBLRR
    FBFBBFFRLR
    FFFBBFFLLR
    FBFBBBFLLR
    FBBFFFFRRL
    BBFBBBFLRR
    BFBBFBFRLR
    FFBFFFBLLR
    FFBFFBFLRL
    BBFFBBBRRR
    BBFFFFFLRR
    FBFFBFBRRL
    FBFFBFFLLR
    FBBBFFBLLL
    FBBBFFBLRR
    BFBBBBBRRR
    BBBFFFBRLL
    FBFFFFFRRR
    BBFBBFFRLR
    BBFFBBBLLR
    BBBFFBFLRL
    BBFFFBFLRR
    FFFBFFFLLL
    FFBFBBFLLR
    BBFFFFFRLL
    BBFBBFFRRL
    FBBFBBBLLL
    FFFBFFBRRR
    FBBBBFFLLL
    FFFBBFFLRR
    BBFFBBBRRL
    FFBBBFFLLL
    FBBBFBFLRL
    BBFBFFFLRL
    FFBFFFFRLL
    FFFBBBFRLL
    FBBBBBFLLL
    BFBFFFFLLL";
  let mut boarding_passes =  Vec::new();
  for line in passes.split("\n") {
    boarding_passes.push(line.trim().to_string());
  }
  return boarding_passes;
}